{"version":3,"sources":["context/alert/alertContext.js","components/Alert.js","components/Navbar.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubContext.js","context/github/githubReducer.js","context/github/GithubState.js","pages/About.js","components/Card.js","components/Search.js","pages/Home.js","components/repos.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["AlertContext","createContext","Alert","useContext","alert","hide","className","type","role","text","aria-label","onClick","aria-hidden","Navbar","to","style","color","fontWeight","exact","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","value","show","GithubContext","users","loading","repos","user","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","GithubState","search","a","setLoading","axios","get","response","data","items","getUser","name","getRepos","tyoe","clearUsers","About","href","rel","target","Card","src","avatar_url","alt","login","Search","useState","setValue","github","placeholder","onChange","event","onKeyPress","key","trim","Home","map","id","Repos","repo","html_url","Profile","match","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","width","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gPAEaA,EAAeC,0BCCfC,EAAQ,WAAO,IAAD,EACDC,qBAAWH,GAA1BI,EADgB,EAChBA,MAAOC,EADS,EACTA,KAEd,OAAKD,EAGD,yBACAE,UAAS,sBAAiBF,EAAMG,MAAQ,YAA/B,sBACTC,KAAK,SACHJ,EAAMK,KACR,4BAAQF,KAAK,SAASD,UAAU,QAAQI,aAAW,QAAQC,QAASN,GAChE,0BAAMO,cAAY,QAAlB,UARW,MCHVC,EAAS,kBAClB,yBAAKP,UAAU,kDACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAASQ,GAAG,IAAIR,UAAU,gBAAe,0BAAMS,MAAO,CAACC,MAAO,QAASC,WAAY,QAA1C,UAAzC,YAEJ,wBAAIX,UAAU,cACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASY,OAAK,EAACJ,GAAG,IAAIR,UAAU,YAAhC,SAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAASQ,GAAG,SAASR,UAAU,YAA/B,a,eCXVa,GAAQ,mBCFY,cDGP,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,WAD/B,cCDY,cDGP,kBAAM,QAFX,yBAGD,SAAAF,GAAK,OAAIA,KAHR,GAMDG,EAAe,SAAEH,EAAOC,GAEjC,OADgBF,EAASE,EAAOd,OAASY,EAASK,SAClCJ,EAAOC,IELdI,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACZC,qBAAWJ,EAAc,MADb,mBAC/BH,EAD+B,KACxBQ,EADwB,KAYtC,OACI,kBAAC5B,EAAa6B,SAAd,CAAuBC,MAAO,CAC1BzB,KAXK,kBAAMuB,EAAS,CAACrB,KDPP,gBCkBRwB,KATD,SAACtB,GAA8B,IAAxBF,EAAuB,uDAAhB,YACtBqB,EAAS,CACLrB,KDZa,aCabe,QAAS,CAACf,OAAME,WAMLL,MAAOgB,IAElBM,I,0CCnBAM,EAAgB/B,0B,OCAvBkB,GAAQ,mBHIc,gBGHR,SAACC,EAAD,OAASE,EAAT,EAASA,QAAT,mBAAC,eAA0BF,GAA3B,IAAkCa,MAAOX,EAASY,SAAS,OADjE,cHEW,aGAR,SAACd,EAAD,OAASE,EAAT,EAASA,QAAT,mBAAC,eAA0BF,GAA3B,IAAkCe,MAAOb,EAASY,SAAS,OAF9D,cHGU,YGAR,SAACd,EAAD,OAASE,EAAT,EAASA,QAAT,mBAAC,eAA0BF,GAA3B,IAAkCgB,KAAMd,EAASY,SAAS,OAH5D,cHKa,eGDR,SAAAd,GAAK,kCAASA,GAAT,IAAgBc,SAAS,OAJnC,cHCa,eGIR,SAAAd,GAAK,kCAASA,GAAT,IAAgBa,MAAO,QALjC,yBAMD,SAAAb,GAAK,OAAIA,KANR,GASDiB,EAAgB,SAACjB,EAAOC,GAEjC,OADgBF,EAASE,EAAOd,OAASY,EAASK,SACnCJ,EAAOC,ICPpBiB,EAAYC,+HAAYC,oBACxBC,EAAgBF,+HAAYG,wBAErBC,EAAc,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SAAc,EAObC,qBAAWU,EANhB,CACjBD,KAAM,GACNH,MAAO,GACPC,SAAS,EACTC,MAAO,KAL4B,mBAOhCf,EAPgC,KAOzBQ,EAPyB,KASjCgB,EAAM,uCAAG,WAAMd,GAAN,eAAAe,EAAA,6DACXC,IADW,SAGYC,IAAMC,IAAN,gDACsBlB,EADtB,sBACyCQ,EADzC,0BACoEG,IAJhF,OAGLQ,EAHK,OAOXrB,EAAS,CACLrB,KJpBgB,eIqBhBe,QAAS2B,EAASC,KAAKC,QAThB,2CAAH,sDAaNC,EAAO,uCAAG,WAAMC,GAAN,eAAAR,EAAA,6DACZC,IADY,SAGWC,IAAMC,IAAN,uCACaK,EADb,sBAC+Bf,EAD/B,0BAC0DG,IAJrE,OAGNQ,EAHM,OAOZrB,EAAS,CACLrB,KJlCY,WImCZe,QAAS2B,EAASC,OATV,2CAAH,sDAaPI,EAAQ,uCAAG,WAAMD,GAAN,eAAAR,EAAA,6DACbC,IADa,SAGUC,IAAMC,IAAN,uCACaK,EADb,uCACgDf,EADhD,0BAC2EG,IAJrF,OAGPQ,EAHO,OAObrB,EAAS,CACLrB,KJhDa,YIiDbe,QAAS2B,EAASC,OATT,2CAAH,sDAeRJ,EAAa,kBAAMlB,EAAS,CAAC2B,KJpDZ,iBIsDhBnB,EAA+BhB,EAA/BgB,KAAMH,EAAyBb,EAAzBa,MAAOE,EAAkBf,EAAlBe,MAAOD,EAAWd,EAAXc,QAE3B,OACI,kBAACF,EAAcH,SAAf,CAAwBC,MAAO,CAC3BgB,aAAYF,SAAQQ,UAASE,WAASE,WAR3B,kBAAM5B,EAAS,CAAC2B,KJtDZ,iBI+DfnB,OAAMH,QAAOE,QAAOD,YAEnBR,IClEA+B,EAAQ,WACjB,OACI,yBAAKnD,UAAU,6BACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,QAAb,cACe,qCADf,IAC6B,6BAD7B,YAEa,uBAAGoD,KAAK,gCAAgCC,IAAI,sBAAsBC,OAAO,UAAzE,4BCNZC,EAAO,SAAC,GAAD,IAAEzB,EAAF,EAAEA,KAAF,OACZ,yBAAK9B,UAAU,QACX,yBAAKwD,IAAK1B,EAAK2B,WAAYC,IAAK5B,EAAK6B,MAAO3D,UAAU,iBACtD,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAc8B,EAAK6B,OACjC,kBAAC,IAAD,CAAMnD,GAAI,YAAcsB,EAAK6B,MAAO3D,UAAU,mBAA9C,WCJH4D,EAAS,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBrC,EADiB,KACVsC,EADU,KAElBhE,EAAQD,qBAAWH,GACnBqE,EAASlE,qBAAW6B,GAiBtB,OACI,yBAAK1B,UAAU,cACX,2BACIC,KAAK,OACLD,UAAU,eACVgE,YAAY,2BACZxC,MAAOA,EACPyC,SAAU,SAAAC,GAAK,OAAIJ,EAASI,EAAMZ,OAAO9B,QACzC2C,WAvBC,SAAAD,GACK,UAAdA,EAAME,MAIVL,EAAOb,aAEH1B,EAAM6C,QACNvE,EAAMC,OACNgE,EAAOzB,OAAOd,EAAM6C,SAEpBvE,EAAM2B,KAAK,+BCfV6C,EAAO,WAAO,IAAD,EACGzE,qBAAW6B,GAA7BE,EADe,EACfA,QAASD,EADM,EACNA,MAEhB,OACI,oCACI,kBAAC,EAAD,MAEA,yBAAK3B,UAAU,OAEV4B,EACK,uBAAG5B,UAAU,eAAb,cACE2B,EAAM4C,KAAI,SAAAzC,GACN,OACI,yBAAK9B,UAAU,gBAAgBoE,IAAKtC,EAAK0C,IACrC,kBAAC,EAAD,CAAM1C,KAAMA,WCjBnC2C,EAAQ,SAAC,GAAD,IAAE5C,EAAF,EAAEA,MAAF,OACjB,oCACCA,EAAM0C,KAAI,SAAAG,GAAI,OACX,yBAAK1E,UAAU,YAAYoE,IAAKM,EAAKF,IACjC,yBAAKxE,UAAU,aACX,4BACI,uBACIoD,KAAMsB,EAAKC,SACXtB,IAAI,sBACJC,OAAO,UACLoB,EAAK3B,cCPlB6B,EAAU,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACkBhF,qBAAW6B,GAAtDoB,EADyB,EACzBA,QAASE,EADgB,EAChBA,SAAUpB,EADM,EACNA,QAASE,EADH,EACGA,KAAMD,EADT,EACSA,MACnCiD,EAAUD,EAAME,OAAOhC,KAQ7B,GANAiC,qBAAU,WACNlC,EAAQgC,GACR9B,EAAS8B,KAEV,IAEClD,EACA,OAAO,uBAAG5B,UAAU,eAAb,cAXqB,IAe5B+C,EAIAjB,EAJAiB,KAAMkC,EAINnD,EAJMmD,QAASxB,EAIf3B,EAJe2B,WACfyB,EAGApD,EAHAoD,SAAUC,EAGVrD,EAHUqD,IAAKC,EAGftD,EAHesD,KACfzB,EAEA7B,EAFA6B,MAAOgB,EAEP7C,EAFO6C,SAAUU,EAEjBvD,EAFiBuD,UACjBC,EACAxD,EADAwD,UAAWC,EACXzD,EADWyD,aAAcC,EACzB1D,EADyB0D,aAG7B,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMhF,GAAG,IAAIR,UAAU,gCAAvB,aAEA,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,yBACIS,MAAO,CAACgF,MAAO,SACfjC,IAAKC,EACLC,IAAKX,IAET,4BAAKA,GACJmC,GAAY,oHAAoBA,IAEjC,yBAAKlF,UAAU,WAEPmF,GAAO,kBAAC,WAAD,KACK,mCACA,2BAAIA,IAGxB,yBAAKnF,UAAU,0DACX,uBACIoD,KAAMuB,EACNtB,IAAI,sBACJC,OAAO,SACPtD,UAAU,gBAJd,iBAQJ,wBAAIA,UAAU,QACT2D,GAAS,4BACE,qCADF,IACiBA,GAE1BsB,GAAW,4BACA,wCADA,IACkBA,GAE7BG,GAAQ,4BACG,wCADH,IACqBA,IAIlC,yBAAKpF,UAAU,+BAAf,cAAyDqF,GACzD,yBAAKrF,UAAU,4BAAf,cAAsDsF,GACtD,yBAAKtF,UAAU,iCAAf,iBAA8DuF,GAC9D,yBAAKvF,UAAU,4BAAf,UAAkDwF,OAMlE,kBAAC,EAAD,CAAO3D,MAAOA,MC/CX6D,MApBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,yBAAK1F,UAAU,kBACb,kBAAC,EAAD,CAAOF,MAAO,CAACK,KAAM,gBACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwF,KAAK,IAAI/E,OAAK,EAACgF,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,SAASC,UAAWzC,IAChC,kBAAC,IAAD,CAAOwC,KAAK,iBAAiBC,UAAWhB,UCXhCiB,QACW,cAA7BC,OAAOZ,SAASa,UAEe,UAA7BD,OAAOZ,SAASa,UAEhBD,OAAOZ,SAASa,SAASlB,MACvB,2DCZNmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eba2d814.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AlertContext = createContext()\r\n","import React, {useContext} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\n\r\nexport const Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n\r\n    if (!alert) return null\r\n\r\n    return (\r\n        <div \r\n        className={`alert alert-${alert.type || 'secondary'} alert-dismissible`} \r\n        role=\"alert\">\r\n        { alert.text }\r\n        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => (\r\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n        <div className=\"navbar-brand\">\r\n            <NavLink to=\"/\" className=\"navbar-brand\"><span style={{color: \"black\", fontWeight: \"600\"}}>GitHub</span> Search</NavLink>\r\n        </div>\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <NavLink exact to=\"/\" className=\"nav-link\">Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to=\"/about\" className=\"nav-link\">About</NavLink>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n)\r\n","import { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n    [SHOW_ALERT] : (state, action) => action.payload,\r\n    [HIDE_ALERT] : () => null,\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const alertReducer = ( state, action ) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler( state, action )\r\n}","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\n\r\nexport const CLEAR_USERS = 'CLEAR_USERS'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const SEARCH_USERS = 'SEARCH_USERS'\r\nexport const SET_LOADING = 'SET_LOADING'","import React, {useReducer} from 'react'\r\nimport { HIDE_ALERT, SHOW_ALERT } from '../types'\r\nimport { AlertContext } from './alertContext'\r\nimport { alertReducer } from './alertReducer'\r\n\r\nexport const AlertState = ({children}) => {\r\n    const [state, dispatch] = useReducer(alertReducer, null)\r\n\r\n    const hide = () => dispatch({type: HIDE_ALERT})\r\n\r\n    const show = (text, type = 'secondary') => {\r\n         dispatch({\r\n             type: SHOW_ALERT,\r\n             payload: {type, text}\r\n         })   \r\n    }\r\n\r\n    return(\r\n        <AlertContext.Provider value={{\r\n            hide, show, alert: state\r\n        }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import { createContext } from 'react'\r\n\r\nexport const GithubContext = createContext()\r\n","import { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\"\r\n\r\nconst handlers = {\r\n    [SEARCH_USERS]: (state, {payload}) => ({...state, users: payload, loading: false}),\r\n    [GET_REPOS]: (state, {payload}) => ({...state, repos: payload, loading: false}),\r\n    [GET_USER]: (state, {payload}) => ({...state, user: payload, loading: false}),\r\n    [SET_LOADING]: state => ({...state, loading: true}),\r\n    [CLEAR_USERS]: state => ({...state, users: []}),\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const githubReducer = (state, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}\r\n\r\n","import axios from 'axios'\r\nimport React, { useReducer } from 'react'\r\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types'\r\nimport { GithubContext } from './githubContext'\r\nimport { githubReducer } from './githubReducer'\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET\r\n\r\nexport const GithubState = ({children}) => {\r\n    const initialState = {\r\n        user: {},\r\n        users: [],\r\n        loading: false,\r\n        repos: []\r\n    }\r\n    const [state, dispatch] = useReducer(githubReducer, initialState)\r\n\r\n    const search = async value => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            `https://api.github.com/search/users?q=${value}&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n        )\r\n\r\n        dispatch({\r\n            type: SEARCH_USERS,\r\n            payload: response.data.items\r\n        })\r\n    }\r\n\r\n    const getUser = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            `https://api.github.com/users/${name}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const getRepos = async name => {\r\n        setLoading()\r\n\r\n        const response = await axios.get(\r\n            `https://api.github.com/users/${name}/repos?per_page=5&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: response.data\r\n        })\r\n    }\r\n\r\n    const clearUsers = () => dispatch({tyoe: CLEAR_USERS})\r\n\r\n    const setLoading = () => dispatch({tyoe: SET_LOADING})\r\n\r\n    const {user, users, repos, loading} = state\r\n\r\n    return (\r\n        <GithubContext.Provider value={{\r\n            setLoading, search, getUser, getRepos,clearUsers,\r\n            user, users, repos, loading\r\n        }}>\r\n            {children}\r\n        </GithubContext.Provider>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4\">Information</h1>\r\n            <p className=\"lead\">\r\n                App version<b> 1.0.0</b> <br/>\r\n                Developer<a href=\"https://ironyhouse.github.io/\" rel=\"noopener noreferrer\" target=\"_blank\"> Artsiom Mazhylouski</a>\r\n            </p>\r\n        </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Card = ({user}) => (\r\n        <div className=\"card\">\r\n            <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{user.login}</h5>\r\n                <Link to={'/profile/' + user.login} className=\"btn btn-primary\">Open</Link>\r\n            </div>\r\n        </div>\r\n)","import React, {useContext, useState} from 'react'\r\nimport { AlertContext } from '../context/alert/alertContext'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Search = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const github = useContext(GithubContext)\r\n\r\n    const onSubmit = event => {\r\n        if (event.key !== 'Enter') {\r\n            return\r\n        }\r\n\r\n        github.clearUsers()\r\n\r\n        if (value.trim()) {\r\n            alert.hide()\r\n            github.search(value.trim())\r\n        } else {\r\n            alert.show('Enter GitHub username')\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter GitHub username...\"\r\n                    value={value}\r\n                    onChange={event => setValue(event.target.value)}\r\n                    onKeyPress={onSubmit}\r\n                />\r\n            </div>\r\n        )\r\n}","import React, { useContext } from 'react'\r\nimport { Card } from '../components/Card'\r\nimport { Search } from '../components/Search'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Home = () => {\r\n    const {loading, users} = useContext(GithubContext)\r\n    \r\n    return (\r\n        <>\r\n            <Search />\r\n\r\n            <div className=\"row\">\r\n\r\n                {loading\r\n                    ? <p className=\"text-center\">Loading...</p>\r\n                    :   users.map(user => {\r\n                            return (\r\n                                <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                                    <Card user={user} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Repos = ({repos}) => (\r\n    <>\r\n    {repos.map(repo => (\r\n        <div className=\"card mb-3\" key={repo.id}>\r\n            <div className=\"card-body\">\r\n                <h5>\r\n                    <a \r\n                        href={repo.html_url}\r\n                        rel=\"noopener noreferrer\" \r\n                        target=\"_blank\"\r\n                        >{repo.name}</a>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    ))}\r\n    </>\r\n)","import React, { useContext, useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Repos } from '../components/repos'\r\nimport { GithubContext } from '../context/github/githubContext'\r\n\r\nexport const Profile = ({match}) => {\r\n    const {getUser, getRepos, loading, user, repos} = useContext(GithubContext)\r\n    const urlName = match.params.name\r\n\r\n    useEffect(() => {\r\n        getUser(urlName)\r\n        getRepos(urlName)\r\n        // eslint-disable-next-line \r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p className=\"text-center\">Loading...</p>\r\n    }\r\n\r\n    const {\r\n        name, company, avatar_url,\r\n        location, bio, blog,\r\n        login, html_url, followers,\r\n        following, public_repos, public_gists\r\n    } = user\r\n\r\n    return (\r\n        <Fragment>\r\n            <Link to=\"/\" className=\"btn btn-outline-primary mb-3\">Home Page</Link>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-3 text-center\">\r\n                            <img \r\n                                style={{width: '150px'}}\r\n                                src={avatar_url} \r\n                                alt={name} \r\n                            />\r\n                            <h3>{name}</h3>\r\n                            {location && <p>Местоположение: {location}</p>}\r\n                            </div>\r\n                            <div className=\"col p-2\">\r\n                                {\r\n                                    bio && <Fragment>\r\n                                                <h3>BIO</h3>\r\n                                                <p>{bio}</p>\r\n                                            </Fragment>\r\n                                }\r\n                            <div className=\"d-flex justify-content-center justify-content-sm-start\">\r\n                                <a \r\n                                    href={html_url} \r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\" \r\n                                    className=\"btn btn-dark\"\r\n                                    >Open Profile\r\n                                </a>\r\n                            </div>\r\n                            <ul className=\"pt-3\">\r\n                                {login && <li>\r\n                                            <b>User: </b> {login}\r\n                                        </li>}\r\n                                {company && <li>\r\n                                            <b>Company: </b> {company}\r\n                                        </li>}\r\n                                {blog && <li>\r\n                                            <b>Website: </b> {blog}\r\n                                        </li>}\r\n                            </ul>\r\n\r\n                            <div className=\"badge badge-primary m-1 p-2\">Followers: {followers}</div>\r\n                            <div className=\"badge badge-info m-1 p-2\">Following: {following}</div>\r\n                            <div className=\"badge badge-secondary m-1 p-2\">Repositories: {public_repos}</div>\r\n                            <div className=\"badge badge-dark m-1 p-2\">Gists: {public_gists}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Repos repos={repos}/>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom' \r\nimport { Alert } from './components/Alert';\r\nimport { Navbar } from './components/Navbar';\r\nimport { AlertState } from './context/alert/AlertState';\r\nimport { GithubState } from './context/github/GithubState';\r\nimport { About } from './pages/About';\r\nimport { Home } from './pages/Home';\r\nimport { Profile } from './pages/Profile';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <GithubState>\r\n      <AlertState>\r\n        <BrowserRouter> \r\n        <Navbar />\r\n        <div className=\"container pt-4\">\r\n          <Alert alert={{text: 'Test alert'}} />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/profile/:name\" component={Profile} />\r\n          </Switch>\r\n        </div>\r\n        </BrowserRouter>\r\n      </AlertState>\r\n    </GithubState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}